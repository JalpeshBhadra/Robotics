function [ warped_pts ] = warp_pts( video_pts, logo_pts, sample_pts)
% warp_pts computes the homography that warps the points inside
% video_pts to those inside logo_pts. It then uses this
% homography to warp the points in sample_pts to points in the logo
% image
% Inputs:
%     video_pts: a 4x2 matrix of (x,y) coordinates of corners in the
%         video frame
%     logo_pts: a 4x2 matrix of (x,y) coordinates of corners in
%         the logo image
%     sample_pts: a nx2 matrix of (x,y) coordinates of points in the video
%         video that need to be warped to corresponding points in the
%         logo image
% Outputs:
%     warped_pts: a nx2 matrix of (x,y) coordinates of points obtained
%         after warping the sample_pts
% Written for the University of Pennsylvania's Robotics:Perception course
sample_pts = [275   191
   275   192
   275   193
   275   194
   275   195
   275   196
   275   197
   275   198];
% Complete est_homography first!
[ H ] = est_homography(video_pts, logo_pts);
%H1 = [-0.0047   -0.0008    0.0000
    %0.0002   -0.0037    0.0000
    %0.6377    0.7702   -0.0009];
%H=H1';
% YOUR CODE HERE
a=[]
sample_pts
a=[sample_pts ones(size(sample_pts,1),1)];
c= H*a';
c1=c';
c2=c1(:,1:2);
warped_pts = c2;
end

